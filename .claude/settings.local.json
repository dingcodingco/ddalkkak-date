{
  "permissions": {
    "allow": [
      "mcp__serena__read_memory",
      "mcp__serena__activate_project",
      "mcp__atlassian__getAccessibleAtlassianResources",
      "mcp__atlassian__getVisibleJiraProjects",
      "mcp__atlassian__createJiraIssue",
      "mcp__atlassian__searchJiraIssuesUsingJql",
      "mcp__atlassian__editJiraIssue",
      "mcp__atlassian__getJiraIssue",
      "mcp__atlassian__getTransitionsForJiraIssue",
      "mcp__atlassian__transitionJiraIssue",
      "Bash(npx create-next-app@14:*)",
      "Bash(npm install:*)",
      "Bash(npm run dev)",
      "Bash(tree:*)",
      "mcp__atlassian__addCommentToJiraIssue",
      "Bash(npm run build)",
      "Bash(npm run format)",
      "Bash(npm run lint)",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_take_screenshot",
      "mcp__playwright__browser_evaluate",
      "mcp__playwright__browser_close",
      "Bash(git init:*)",
      "Bash(git add:*)",
      "Bash(git checkout:*)",
      "Bash(git pull:*)",
      "Bash(git commit:*)",
      "Bash(git branch:*)",
      "Bash(chmod:*)",
      "Bash(./gradlew:*)",
      "Bash(gradle --version)",
      "Bash(gradle wrapper:*)",
      "Read(//private/tmp/**)",
      "Bash(curl:*)",
      "Bash(pkill:*)",
      "Bash(kill:*)",
      "Bash(git merge:*)",
      "Bash(docker-compose up:*)",
      "Bash(docker-compose ps:*)",
      "Bash(docker-compose exec postgres psql:*)",
      "Bash(docker-compose down:*)",
      "Bash(docker rm:*)",
      "Bash(./backend/gradlew -p backend test --tests CourseGenerationControllerTest)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "Bash(terraform output:*)",
      "Bash(aws ecs list-tasks:*)",
      "mcp__playwright__browser_console_messages",
      "mcp__serena__list_dir",
      "Bash(aws logs tail:*)",
      "Bash(aws ecs describe-task-definition:*)",
      "Bash(jq:*)",
      "Bash(find:*)",
      "Bash(terraform plan:*)",
      "Bash(git push:*)",
      "mcp__serena__get_current_config",
      "mcp__serena__check_onboarding_performed",
      "mcp__serena__onboarding",
      "mcp__serena__write_memory"
    ],
    "deny": [],
    "ask": []
  }
}
